Well with [Grid](http://amethystlabs.org/grid), I had 11 TCP servers, and I managed to screw them all.
The design I implemented(a year ago when I was sorta rookie) was to start a server, let client connect to it,
when done close the server and then start again. I think you can see what is happening here, I closed the whole
ServerSocket when the client was finished and started it again to listen for new connections. Screwed up stuff,
I know. 

And now finally when I am done with the network(99.999999%), here is the updated Actor approach. 
The io.streamer.Server class, takes 3 parameters, a port number, an actor system, and a function.
The start() method creates a ServerSocket with the given port, and listens to incoming client requests
in a new Thread. If a connection is method, then an actor is summoned using th actor system provided.
This actor then takes care of the connection to the client. 
